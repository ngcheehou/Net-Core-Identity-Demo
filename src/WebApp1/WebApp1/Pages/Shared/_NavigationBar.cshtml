
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Identity;



@inject Microsoft.AspNetCore.Identity.UserManager<IdentityUser> UserManager
@inject Microsoft.AspNetCore.Identity.RoleManager<IdentityRole> RoleManager








<div class="list-group">

    @{
        if (User.HasClaim(x => x.Type == Constant.PagesNameConst.IT))
        {
            <a href="/DailyVisit/InformationTechnology" class="list-group-item list-group-item-action">
                Information Technology Page
            </a>
        }
        if (User.HasClaim(x => x.Type == Constant.PagesNameConst.IT))
        {
            <a href="/DailyVisit/SalesReport" class="list-group-item list-group-item-action">
                Sales Report Page
        </a>
        }
        <a href="/DailyVisit/TopSecretCEOOnly" class="list-group-item list-group-item-action">
            Top Secret Page
        </a>

        <div class="list-group-item list-group-item-action" data-bs-toggle="collapse" data-bs-target="#hrSubmenu" aria-expanded="false">
            HR Activity
        </div>
        <div id="hrSubmenu" class="collapse">
            <a href="/HR/CreateEmployee" class="list-group-item list-group-item-action">
                Create New Employee
            </a>
            <a href="/HR/DepartmentManagement" class="list-group-item list-group-item-action">
                Department Management Page
            </a>
            <a href="/HR/EmployeeManagement" class="list-group-item list-group-item-action">
                Employee Management Page
            </a>
            <a href="/HR/ResetEmployee" class="list-group-item list-group-item-action">
                Reset Employee Page
            </a>
            <a href="/HR/PageAccessManagement" class="list-group-item list-group-item-action">
                Page Access Management Page
            </a>

        </div>
    }
</div>
